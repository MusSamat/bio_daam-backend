import { Update, Start, Ctx, Hears, Action } from 'nestjs-telegraf';
import { Context, Markup } from 'telegraf';

@Update()
export class TelegramController {
  @Start()
  async onStart(@Ctx() ctx: Context) {
    const from = ctx.from
    const name =
        from?.username
            ? `@${from.username}`
            : [from?.first_name, from?.last_name].filter(Boolean).join(' ')
    await ctx.reply(
        `üëã, ${name}!\n` +
        `–ü–æ–µ—Ö–∞–ª–∏ –∑–∞ –≤–∫—É—Å–Ω—ã–º –æ–±–µ–¥–æ–º! üçΩ\n` +
        `–ù–∞–∑ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–∫–∞–∑–∞.`,
        Markup.inlineKeyboard([
          [Markup.button.webApp('–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é', process.env.WEBAPP_URL!)],
        ]),
    );
  }

  @Hears(/^–ø—Ä–∏–≤–µ—Ç$/i)
  async onHello(@Ctx() ctx: Context) {
    const from = ctx.from
    const name =
        from?.username
            ? `@${from.username}`
            : [from?.first_name, from?.last_name].filter(Boolean).join(' ')

    await ctx.reply(`–ü—Ä–∏–≤–µ—Ç, ${name}! üëã`)
  }

  // –õ—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ _–Ω–µ_ —Ä–æ–≤–Ω–æ ‚Äú–ø—Ä–∏–≤–µ—Ç‚Äù
  @Hears(/^(?!–ø—Ä–∏–≤–µ—Ç$).+/i)
  async onFallback(@Ctx() ctx: Context) {
    // ctx.message ‚Äî —ç—Ç–æ Union –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ Message; –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –≤ –Ω—ë–º –µ—Å—Ç—å —Ç–µ–∫—Å—Ç
    const msg = ctx.message
    const text =
        msg && 'text' in msg && typeof msg.text === 'string'
            ? msg.text
            : ''

    await ctx.reply(
        `–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: ¬´${text}¬ª\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é:`,
        Markup.inlineKeyboard([
          [ Markup.button.webApp('–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é', process.env.WEBAPP_URL!) ],
        ]),
    )
  }
}